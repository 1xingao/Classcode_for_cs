<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        TVlZ7gAAAABJRU5ErkJggg==
</value>
  </data>
</root>