<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        YII=
</value>
  </data>
</root>